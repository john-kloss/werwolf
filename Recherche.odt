1. Webserver

own server: champp
	on http://localhost/phpmyadmin
tutorial: http://www.androidhive.info/2012/05/how-to-connect-android-with-php-mysql/


Eventuell eigener server?
https://help.ubuntu.com/14.04/serverguide/installing-from-cd.html


Funktionsweise:
- mithilfe eines PHP Scripts wird eine SQL-Datenbank erstellt
- Datenaustausch erfolgt mithilfe eines HTTP-Request des Android Geräts
- dargestellt wird das ganze durch JSON


(auf Android Gerät)
https://play.google.com/store/apps/details?id=ru.kslabs.ksweb

HttpClient client = new DefaultHttpClient();
		HttpGet request = new HttpGet("http://www.myurl.com/api_name");
		HttpResponse response = client.execute(request);

http://www.tutorialspoint.com/android/android_php_mysql.htm
https://www.codeofaninja.com/2013/04/android-http-client.html

AsyncTask
Here is an example of subclassing:
 private class DownloadFilesTask extends AsyncTask<URL, Integer, Long> {
     protected Long doInBackground(URL... urls) {
         int count = urls.length;
         long totalSize = 0;
         for (int i = 0; i < count; i++) {
             totalSize += Downloader.downloadFile(urls[i]);
             publishProgress((int) ((i / (float) count) * 100));
             // Escape early if cancel() is called
             if (isCancelled()) break;
         }
         return totalSize;
     }
     protected void onProgressUpdate(Integer... progress) {
         setProgressPercent(progress[0]);
     }
     protected void onPostExecute(Long result) {
         showDialog("Downloaded " + result + " bytes");
     }
 }
 
Once created, a task is executed very simply:
 new DownloadFilesTask().execute(url1, url2, url3);
 



2. QR-Code


3. Eyetracking
